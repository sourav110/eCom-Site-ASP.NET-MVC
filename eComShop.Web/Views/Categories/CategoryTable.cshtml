@model eComShop.Web.ViewModels.CategorySearchViewModel

@{ ViewBag.Title = "Category Table"; }


<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Category Table
            </h2>
        </div>
    </div>
</div>


<div>
    <form method="post">
        <div class="form-group">
            <div class="row">
                <div class="col-md-8">
                    <input id="searchText" name="SearchText" class="form-control" />
                </div>
                <div class="col-md-4">
                    <button type="button" id="btnSearch">Search</button>
                    <button type="button" id="btnReset">Reset</button>
                    <button type="button" id="btnNew">New</button>
                </div>
            </div>
        </div>
    </form>
</div>
<br />


<div>
    <table class="table table-bordered table-striped" id="productsTable">
        <thead class="thead-inverse">
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Description</th>
                <th class="font-weight-bold">Products</th>
                <th class="font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count() > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>@category.Description</td>
                        <td>@category.Products.Count()</td>
                        <td>
                            <button class="btnEdit" type="button" data-id="@category.Id">Edit</button>
                            <button class="btnDelete" type="button" data-id="@category.Id">Delete</button>
                        </td>
                    </tr> 
                }
            }

            else
            {
                <tr>
                    <td class="text-danger" colspan="5">No category found</td>
                </tr>
            }

        </tbody>
    </table>
    <div>
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {
            if(Model.Pager.CurrentPage > 1)
            {
                <button class="pageButton" data-pageNo="1"><i class="fa fa-angle-double-left"></i></button>
                <button class="pageButton" data-pageNo="@(Model.Pager.CurrentPage - 1)"><i class="fa fa-angle-left"></i></button>
            }

            for(var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-success" : string.Empty;

                <button class="@activeClass pageButton" data-pageNo="@page">@page</button>
            }

            if(Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButton" data-pageNo="@(Model.Pager.CurrentPage + 1)"><i class="fa fa-angle-right"></i></button>
                <button class="pageButton" data-pageNo="@(Model.Pager.EndPage)"><i class="fa fa-angle-double-right"></i></button>
            }
            
        }

    </div>
</div>


<script>
    $(".pageButton").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("CategoryTable", "Categories")',
            data: {
                pageNo: $(this).attr('data-pageNo'),
                searchText: '@Model.SearchText'
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });


    $("#btnSearch").click(function () {
        var searchValue = $("#searchText").val();

        $.ajax({
            type: 'GET',
            url: '@Url.Action("CategoryTable", "Categories")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#btnReset").click(function () {
        var searchValue = '';

        $.ajax({
            type: 'GET',
            url: '@Url.Action("CategoryTable", "Categories")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#btnNew").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "Categories")',
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".btnEdit").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Categories")',
            data: {
                Id : $(this).attr('data-id')
            }
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });

    $(".btnDelete").click(function () {

        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {

                $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Categories")',
                data: {
                    Id : $(this).attr('data-id')
                }

                }).done(function (response) {
                    $("#tableContainer").html(response);
                    swal("Product Deleted Successfully!", {
                        icon: "success",
                    });

                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Failed");
                });
            }
        });

    });

    //function focusAction() {
    //    $('html, body').animate({
    //        scrollTop: $("#actionContainer").offset().top - 100
    //    }, 1000);
    //}
</script>


