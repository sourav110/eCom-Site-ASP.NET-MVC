@model List<eComShop.Entities.CustomConfig>

@{ ViewBag.Title = "CustomConfig"; }

<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Custom Configurations Table
            </h2>
        </div>
    </div>
</div>

<div>
    <form method="post">
        <div class="form-group">
            <div class="row">
                <div class="col-md-9">
                    <input id="searchText" name="SearchText" class="form-control" />
                </div>
                <div class="col-md-3">
                    <button type="button" id="btnSearch">Search</button>
                    <button type="button" id="btnNew">New</button>
                </div>
            </div>
        </div>
    </form>
</div>
<br />



<div>
    <table class="table table-bordered table-striped">
        <thead class="thead-inverse">
            <tr>
                <th class="font-weight-bold">Config Name</th>
                <th class="font-weight-bold">Value</th>
                <th class="font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var config in Model)
            {
                <tr>
                    <td>@config.Key</td>
                    <td>@config.Value</td>
                    <td>
                        <button class="btnEdit" type="button" data-id="@config.Key">Edit</button>
                        <button class="btnDelete" type="button" data-id="@config.Key">Delete</button>
                    </td>
                </tr>
             }
        </tbody>
    </table>
</div>

<script>
    $("#btnSearch").click(function () {
        var searchValue = $("#searchText").val();

        $.ajax({
            type: 'GET',
            url: '@Url.Action("CustomConfigTable", "CustomConfig")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#btnNew").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "CustomConfig")',
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".btnEdit").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "CustomConfig")',
            data: {
                Key : $(this).attr('data-id')
            }
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });

    $(".btnDelete").click(function () {

        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this record?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {


                $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "CustomConfig")',
                data: {
                    Key : $(this).attr('data-id')
                }

                }).done(function (response) {
                    $("#tableContainer").html(response);
                    swal("Record Deleted Successfully!", {
                        icon: "success",
                    });

                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Failed");
                });
            }
        });

    });

</script>

