@model List<eComShop.Entities.Product>

@{ 
    ViewBag.Title = "ProductTable"; 
}

<h2 style="text-align:center">Product Table</h2>
<br />

<div>
    <form method="post" @*action="@Url.Action("ProductTable","Products")"*@>
        <div class="form-group">
            <div class="row">
                <div class="col-md-9">
                    <input id="searchText" name="SearchText" class="form-control" />
                </div>
                <div class="col-md-3">
                    <button type="button" id="btnSearch">Search</button>
                    <button type="button" id="btnNew">New</button>
                </div>
            </div>
        </div>
    </form>
</div>
<br />



<div>
    <table class="table table-bordered table-striped">
        <thead class="thead-inverse">
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Description</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>
                        @if (product.Category != null) 
                        { 
                            <text>@product.Category.Name</text>
                        }
                        else
                        {
                            <text>--</text>
                        }
                    </td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>

                    <td>
                        @*<a class="btn btn-primary" href="@Url.Action("Edit", "Products", new { id = product.Id})">Edit</a>
                        <a class="btn btn-danger" href="@Url.Action("Delete", "Products", new { id = product.Id})">Delete</a>*@
                        <button class="btnEdit" type="button" data-id ="@product.Id">Edit</button>
                        <button class="btnDelete" type="button" data-id ="@product.Id">Delete</button>
                        <button class="addToCart" type="button" data-id ="@product.Id">Add to Cart</button>
                    </td>
                </tr>            
             }
        </tbody>
    </table>
</div>


<script>
    $("#btnSearch").click(function () {
        var searchValue = $("#searchText").val();

        $.ajax({
            type: 'GET',
            url: '@Url.Action("ProductTable", "Products")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });


    $("#btnNew").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "Products")',
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction();

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });


    $(".btnEdit").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Products")',
            data: {
                Id : $(this).attr('data-id')
            }
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction();

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });


    $(".btnDelete").click(function () {

        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {
                

                $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Products")',
                data: {
                    Id : $(this).attr('data-id')
                }

                }).done(function (response) {
                    $("#tableContainer").html(response);
                    swal("Product Deleted Successfully!", {
                        icon: "success",
                    });

                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Failed");
                });
            } 
        });


        @*var confirmDelete = confirm("Are you sure to want to delete?");
        if (confirmDelete) {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Products")',
                data: {
                    Id : $(this).attr('data-id')
                }
            }).done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });

        }*@

    });

    function focusAction() {
        $('html, body').animate({
            scrollTop: $("#actionContainer").offset().top - 100
        }, 1000);
    }
</script>












