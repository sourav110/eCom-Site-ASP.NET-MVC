@*@model List<eComShop.Entities.Product>*@
@model eComShop.Web.ViewModels.ProductSearchViewModels

@{ ViewBag.Title = "Products Table"; }

<!--DataTables CSS-->
<link type="text/css" rel="stylesheet" href="//cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css"/>
<link href="~/Content/data-tables/datatables.min.css" rel="stylesheet" />

<!--DataTables JS-->
<script src="//cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<script src="~/Content/data-tables/datatables.min.js"></script>

<div class="row">
    <div class="col-md-12">
        <div class="title-section">
            <h2 class="title">
                Product Table
            </h2>
        </div>
    </div>
</div>

<div>
    <form method="post">
        <div class="form-group">
            <div class="row">
                <div class="col-md-8">
                    <input id="searchText" name="SearchText" class="form-control" />
                </div>
                <div class="col-md-4">
                    <button type="button" id="btnSearch">Search</button>
                    <button type="button" id="btnReset">Reset</button>
                    <button type="button" id="btnNew">New</button>
                </div>
            </div>
        </div>
    </form>
</div>
<br />



<div>
    <table class="table table-bordered table-striped" id="productsTable">
        <thead class="thead-inverse">
            <tr>
                <th class="font-weight-bold">Product Name</th>
                <th class="font-weight-bold">Category</th>
                <th class="font-weight-bold">Description</th>
                <th class="font-weight-bold">Price</th>
                <th class="font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count() > 0)
            {
                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text> }
                            else
                            {
                                <text>--</text>
                            }
                         </td>
                          <td>@product.Description</td>
                          <td>@product.Price</td>
                      
                          <td>
                              <button class="btnEdit" type="button" data-id="@product.Id">Edit</button>
                              <button class="btnDelete" type="button" data-id="@product.Id">Delete</button>
                              <button class="addToCart" type="button" data-id="@product.Id">Add to Cart</button>
                          </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-danger" colspan="5">No products found</td>
                </tr>
            }

        </tbody>
    </table>
    <div>
        @if (Model.PageNo != 1)
        {
           <button class="pageButton" data-pageNo="@(Model.PageNo - 1)">Previous</button>
        }
        <button class="pageButton" data-pageNo="@(Model.PageNo + 1)">Next</button>
    </div>
</div>


<script>
    //$("#productsTable").DataTable();

    $(".pageButton").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("ProductTable", "Products")',
            data: {
                pageNo: $(this).attr('data-pageNo')
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });


    $("#btnSearch").click(function () {
        var searchValue = $("#searchText").val();

        $.ajax({
            type: 'GET',
            url: '@Url.Action("ProductTable", "Products")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#btnReset").click(function () {
        var searchValue = '';

        $.ajax({
            type: 'GET',
            url: '@Url.Action("ProductTable", "Products")',
            data: {
                searchText: searchValue
            }
        }).done(function (response) {
            $("#tableContainer").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $("#btnNew").click(function () {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Create", "Products")',
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Fail");
        });
    });

    $(".btnEdit").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Products")',
            data: {
                Id : $(this).attr('data-id')
            }
        }).done(function (response) {
            $("#actionContainer").html(response);
            focusAction("actionContainer");

        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    });

    $(".btnDelete").click(function () {

        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then((willDelete) => {
            if (willDelete) {


                $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Products")',
                data: {
                    Id : $(this).attr('data-id')
                }

                }).done(function (response) {
                    $("#tableContainer").html(response);
                    swal("Product Deleted Successfully!", {
                        icon: "success",
                    });

                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Failed");
                });
            }
        });

    });

    var products = [];

    $(".addToCart").click(function () {

        var productId = $(this).attr('data-id');

        products.push(productId);

        $.cookie('CartProducts', products.join('-'), { path: '/' }); //accessible anywhere in the website because of setting path

        swal("Product Added to Cart", {
            icon: "success",
        });
    });


    //function focusAction() {
    //    $('html, body').animate({
    //        scrollTop: $("#actionContainer").offset().top - 100
    //    }, 1000);
    //}
</script>


