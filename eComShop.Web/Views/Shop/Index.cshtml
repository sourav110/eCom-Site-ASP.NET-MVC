@model eComShop.Web.ViewModels.ShopViewModel
@using eComShop.Web.Code
@using eComShop.Web.ViewModels


@{
    ViewBag.Title = "shop-index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)(SortByEnums.Default) })" class="@(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default-Newest</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)(SortByEnums.Popularity) })" class="@(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)(SortByEnums.PriceLowToHigh) })" class="@(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a href="@Url.Action("Index", "Shop", new { sortBy = (int)(SortByEnums.PriceHighToLow) })" class="@(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->


                    <!-- /.widget-size -->

                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range-custom"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>

                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeaturedCategories)
                            {
                              <a href="@Url.Action("Index", "Shop", new { categoryId = category.Id })">@category.Name</a>
                            }
                        </div>
                    </div><!-- /.widget -->
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div class="filter-shop clearfix">
                    <p class="showing-product float-right">
                        Showing 1–12 of 56 Products
                    </p>
                </div><!-- /.filte-shop -->
                
                <div id="productsDiv">
                    @{
                        var filteredProductsViewModel = new FilteredProductsViewModel();
                        filteredProductsViewModel.Products = Model.Products;

                        Html.RenderPartial("FilteredProducts", filteredProductsViewModel);
                    }

                </div>
                

            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->


<script>
    var callTimeout;

    var priceSlider = $("#slide-range-custom").slider({
        range: true,
        min: 0,
        max: @Model.MaximumPrice,
        values: [0, @Model.MaximumPrice],
        slide: function (event, ui) {

            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];

            $("#amount").val("TK" + minPrice + ".00" + " - " + "TK" + maxPrice + ".00");

            clearTimeout(callTimeout);
            callTimeout = setTimeout(GetData, 1000);
        }
    });

    function GetData() {
        $.ajax({
            //type: 'GET',
            url: '@Url.Action("FilteredProducts", "Shop")',
            data: {
                minimumPrice: priceSlider.slider("values", 0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        }).done(function (response) {
            $("#productsDiv").html(response);
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Failed");
        });
    }
</script>
